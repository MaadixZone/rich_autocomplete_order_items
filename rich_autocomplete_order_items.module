<?php

/**
 * @file
 * Contains rich_autocomplete_order_items.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function rich_autocomplete_order_items_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rich_autocomplete_order_items module.
    case 'help.page.rich_autocomplete_order_items':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Not implemented!!! Tweaks autocomplete tag style in order inline editor to show more data than just title and id from order items.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function rich_autocomplete_order_items_form_commerce_order_default_edit_form_alter(&$form, &$form_state, $form_id) {
  /*$field_name = "commerce_order_item";
  if (!isset($form[$field_name])) { return; }
  foreach($form[$field_name]['und'] as $delta => $element) {
  if (!is_numeric($delta)) { continue; }
  }*/
}

/*
 * Implements hook_inline_entity_form_reference_form_alter()
 * Perform alterations before the reference form is included in the IEF
 * widget.
 *
 * The reference form is used to add existing entities through an
 *  autocomplete field
 *
 * @param $reference_form
 *   Nested array of form elements that comprise the reference form.
 * @param $form_state
 *   The form state of the parent form.

function rich_autocomplete_order_items_inline_entity_form_reference_form_alter(&$reference_form, &$form_state) {
  $reference_form['entity_id']['#description'] = t('New autocomplete description');
}
 */
